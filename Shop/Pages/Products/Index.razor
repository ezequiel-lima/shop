@page "/products"
@inject AppDbContext _context
@inject NavigationManager _navigationManager

<h3>Products</h3>

<div class="mb-3">

    <a href="products/create" class="btn btn-success"><i class="oi oi-plus"></i> Criar Produto</a>

    <div class="input-group mt-3">
        <input type="text" class="form-control" @bind-value="searchTerm" @onblur="Filter" placeholder="Pesquisar produtos">
        <button class="btn btn-primary" @onclick="Filter"><i class="oi oi-magnifying-glass"></i> Pesquisar</button>
    </div>

    <table class="table">
        <thead>
            <tr>
                <td>#</td>
                <td>Title</td>
                <td>Price</td>
                <td>Category</td>
                <td>Opções</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in _products)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.Title</td>
                    <td>@item.Price.ToString("C")</td>
                    <td>@item.Category.Name</td>
                    <td>
                        <a href="products/edit/@item.Id" class="btn btn-info"><i class="oi oi-pencil"></i> Editar Produto</a>
                        <a href="products/delete/@item.Id" class="btn btn-danger"><i class="oi oi-x"></i> Deletar Produto</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    private List<Product> _products = new();
    private string searchTerm = "";

    protected override async Task OnInitializedAsync()
    {
        _products = await _context.Products.AsNoTracking().Include(x => x.Category).ToListAsync();
    }

    async Task Filter()
    {
        if (string.IsNullOrWhiteSpace(searchTerm))
        {
            _products = await _context.Products.AsNoTracking().Include(x => x.Category).ToListAsync();
        }
        else
        {
            _products = await _context.Products.AsNoTracking().Include(x => x.Category)
            .Where(x => x.Title.Contains(searchTerm))
            .ToListAsync();
        }
    }
}
